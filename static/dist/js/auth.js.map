{
  "version": 3,
  "sources": ["../../js/auth.js"],
  "sourcesContent": ["// auth.js\r\n// AJAX functions for login, signup, logout using Fetch API.\r\n\r\nasync function loginUser(formData) {\r\n  const res = await fetchWithCSRF('/login/', {\r\n    method: 'POST',\r\n    body: formData,\r\n  });\r\n  return res.json();\r\n}\r\n\r\nasync function signupUser(formData) {\r\n  const res = await fetchWithCSRF('/signup/', {\r\n    method: 'POST',\r\n    body: formData,\r\n  });\r\n  return res.json();\r\n}\r\n\r\nasync function logoutUser() {\r\n  const res = await fetchWithCSRF('/logout/', {\r\n    method: 'POST',\r\n  });\r\n  return res.json();\r\n}\r\n\r\nwindow.loginUser = loginUser;\r\nwindow.signupUser = signupUser;\r\nwindow.logoutUser = logoutUser;\r\n\r\n// Attach login page interactions without inline JS\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  const form = document.getElementById('loginForm');\r\n  if (form) {\r\n    const loader = document.getElementById('loginLoader');\r\n    const errBox = document.getElementById('loginError');\r\n    const btn = document.getElementById('loginBtn');\r\n    const btnSpinner = document.getElementById('btnSpinner');\r\n    const btnText = document.getElementById('btnText');\r\n\r\n    function setBusy(state){\r\n      if (!btn || !btnSpinner || !btnText) return;\r\n      if(state){\r\n        btn.disabled = true; btn.classList.add('opacity-80','cursor-not-allowed');\r\n        btnSpinner.classList.remove('hidden'); btnText.textContent = 'Signing in\u2026';\r\n      } else {\r\n        btn.disabled = false; btn.classList.remove('opacity-80','cursor-not-allowed');\r\n        btnSpinner.classList.add('hidden'); btnText.textContent = 'Sign in';\r\n      }\r\n    }\r\n\r\n    form.addEventListener('submit', async (e) => {\r\n      e.preventDefault();\r\n      if (errBox) { errBox.classList.add('hidden'); errBox.textContent = ''; }\r\n      setBusy(true);\r\n      try {\r\n        const data = new FormData(form);\r\n        // Minimal client-side validation to avoid unnecessary requests\r\n        const username = (data.get('username') || '').trim();\r\n        const password = (data.get('password') || '');\r\n        if (!username || !password) {\r\n          if (errBox) { errBox.textContent = 'Please enter both username and password.'; errBox.classList.remove('hidden'); }\r\n          setBusy(false);\r\n          return;\r\n        }\r\n        const res = await loginUser(data);\r\n        if (res && res.success) {\r\n          if (window.updateAriaStatus) window.updateAriaStatus('Login successful. Redirecting to dashboard.');\r\n          if (loader) { loader.classList.remove('hidden'); loader.classList.add('flex'); }\r\n          if (form.parentElement) { form.parentElement.classList.add('opacity-0','translate-y-2'); }\r\n\r\n          // Show progress loading effect in the center during the 3s wait\r\n          try {\r\n            // Reuse if already present to avoid duplicate IDs\r\n            let loadingEl = document.getElementById('loading');\r\n            if (!loadingEl) {\r\n              loadingEl = document.createElement('div');\r\n              loadingEl.id = 'loading';\r\n              loadingEl.textContent = 'Please wait...';\r\n            }\r\n            // Host: use the centered container's parent of the card wrapper (safe selector)\r\n            // Structure: .min-h-[70vh] > .w-full.max-w-lg > .card > form\r\n            const cardWrapper = form && form.closest('.w-full.max-w-lg');\r\n            const host = (cardWrapper && cardWrapper.parentElement) || document.body;\r\n            // Hide the original card to avoid visual overlap\r\n            const card = form && form.parentElement ? form.parentElement : null;\r\n            if (card) { card.classList.add('hidden'); }\r\n            // Ensure loader is visible\r\n            loadingEl.classList.remove('hidden');\r\n            // Append loader if not already in DOM\r\n            if (!loadingEl.isConnected) host.appendChild(loadingEl);\r\n            // Optional: bring into view for smaller screens\r\n            try { loadingEl.scrollIntoView({ block: 'center', behavior: 'smooth' }); } catch(_){ }\r\n          } catch(_) { /* no-op: graceful fallback */ }\r\n          setTimeout(() => {\r\n            window.location.href = res.redirect || '/dashboard/';\r\n          }, 3000);\r\n        } else {\r\n          const msg = (res && (res.error || res.detail)) || 'Invalid username or password';\r\n          if (errBox) { errBox.textContent = msg; errBox.classList.remove('hidden'); }\r\n          if (window.updateAriaStatus) window.updateAriaStatus('Login failed. ' + msg);\r\n          if (form.parentElement) {\r\n            form.parentElement.classList.add('motion-safe:animate-[shake_0.3s]');\r\n            setTimeout(()=> form.parentElement.classList.remove('motion-safe:animate-[shake_0.3s]'), 350);\r\n          }\r\n        }\r\n      } catch (ex) {\r\n        if (errBox) { errBox.textContent = 'Network error. Please try again.'; errBox.classList.remove('hidden'); }\r\n        if (window.updateAriaStatus) window.updateAriaStatus('Network error during login.');\r\n      } finally {\r\n        setBusy(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  // ------------------------------\r\n  // Super-Admin Forgot Password (OTP) \u2013 zero reload\r\n  // ------------------------------\r\n  const fpToggle = document.getElementById('forgotPwdToggle');\r\n  const fpWrap = document.getElementById('forgotPwdWrap');\r\n  const fpStepSend = document.getElementById('fpStepSend');\r\n  const fpStepOtp = document.getElementById('fpStepOtp');\r\n  const fpStepReset = document.getElementById('fpStepReset');\r\n  const fpSendBtn = document.getElementById('fpSendBtn');\r\n  const fpOtpInput = document.getElementById('fpOtpInput');\r\n  const fpVerifyBtn = document.getElementById('fpVerifyBtn');\r\n  const fpNewPassword = document.getElementById('fpNewPassword');\r\n  const fpConfirmPassword = document.getElementById('fpConfirmPassword');\r\n  const fpResetBtn = document.getElementById('fpResetBtn');\r\n  const fpMsg = document.getElementById('fpMsg');\r\n  const fpCountdown = document.getElementById('fpCountdown');\r\n  const fpCountdownOtp = document.getElementById('fpCountdownOtp');\r\n  const fpProgressOtp = document.getElementById('fpProgressOtp');\r\n  const fpOtpFill = document.getElementById('fpOtpFill');\r\n  const fpOtpLive = document.getElementById('fpOtpLive');\r\n  const loginPasswordField = document.getElementById('password');\r\n  const loginBtn = document.getElementById('loginBtn');\r\n\r\n  // OTP split boxes (6 inputs) \u2013 support both original fp* IDs and user's otp* IDs\r\n  const fpOtpGroup = document.getElementById('fpOtpGroup');\r\n  const fpOtpBoxes = [0,1,2,3,4,5].map(i=> document.getElementById('fpOtpBox'+i)).filter(Boolean);\r\n  const otpGroupCompat = document.getElementById('otpGroup');\r\n  const otpBoxesCompat = [0,1,2,3,4,5].map(i=> document.getElementById('otp'+i)).filter(Boolean);\r\n  const fpOtpClear = document.getElementById('fpOtpClear') || document.getElementById('otpClear');\r\n  const fpResendBtn = document.getElementById('fpResendBtn');\r\n  const fpResendLabel = document.getElementById('fpResendLabel');\r\n  const countdownCompat = document.getElementById('countdown');\r\n  const progressBarCompat = document.getElementById('progressBar');\r\n  const progressTextCompat = document.getElementById('progressText');\r\n\r\n  // Effective OTP elements (prefer fp* if present, else otp* variants)\r\n  const OTP = {\r\n    group: fpOtpGroup || otpGroupCompat,\r\n    boxes: (fpOtpBoxes && fpOtpBoxes.length ? fpOtpBoxes : otpBoxesCompat),\r\n    clearBtn: fpOtpClear,\r\n    progressFill: fpOtpFill || progressBarCompat,\r\n    progressText: progressTextCompat,\r\n    countdownText: fpCountdownOtp || countdownCompat,\r\n  };\r\n  let otpSubmitting = false;\r\n  let resendCooldownTimer = null;\r\n\r\n  function ariaAnnounce(msg){\r\n    try {\r\n      if (!fpOtpLive) return;\r\n      // Clear then set to ensure SRs read changes\r\n      fpOtpLive.textContent = '';\r\n      // Minor delay helps some screen readers pick up changes reliably\r\n      setTimeout(()=>{ fpOtpLive.textContent = msg; }, 10);\r\n    } catch(_){ }\r\n  }\r\n\r\n  function getOtpString(){\r\n    if (!OTP.boxes || !OTP.boxes.length) return '';\r\n    return OTP.boxes.map(b => (b && b.value) ? b.value.replace(/\\D/g,'') : '').join('').slice(0,6);\r\n  }\r\n  function setOtpHidden(){\r\n    if (fpOtpInput) fpOtpInput.value = getOtpString();\r\n  }\r\n  function updateOtpFill(){\r\n    if (!OTP.progressFill && !OTP.progressText) return;\r\n    const len = getOtpString().length;\r\n    const pct = Math.max(0, Math.min(100, Math.round((len/6)*100)));\r\n    try { if (OTP.progressFill) OTP.progressFill.style.width = pct + '%'; } catch(_){ }\r\n    try { if (OTP.progressText) OTP.progressText.textContent = `${len}/6`; } catch(_){ }\r\n  }\r\n  function clearOtp(){\r\n    (OTP.boxes || []).forEach(b=>{ if (b) b.value=''; });\r\n    setOtpHidden();\r\n    updateOtpFill();\r\n    if (OTP.boxes && OTP.boxes[0]) OTP.boxes[0].focus();\r\n  }\r\n  function otpErrorFeedback(){\r\n    try{\r\n      if (OTP.group){\r\n        OTP.group.classList.add('animate-shake');\r\n        setTimeout(()=> OTP.group.classList.remove('animate-shake'), 350);\r\n      }\r\n      (OTP.boxes || []).forEach(b=>{\r\n        if (!b) return;\r\n        b.classList.remove('ring-2','ring-green-500','border-green-500');\r\n        b.classList.add('ring-2','ring-red-500','border-red-500');\r\n        setTimeout(()=>{ b.classList.remove('ring-2','ring-red-500','border-red-500'); }, 800);\r\n      });\r\n    } catch(_){ }\r\n  }\r\n  function focusNext(index){\r\n    if (!OTP.boxes || !OTP.boxes.length) return;\r\n    const next = OTP.boxes[index+1];\r\n    if (next) next.focus();\r\n  }\r\n  function focusPrev(index){\r\n    if (!OTP.boxes || !OTP.boxes.length) return;\r\n    const prev = OTP.boxes[index-1];\r\n    if (prev) prev.focus();\r\n  }\r\n  function handleOtpAutoSubmit(){\r\n    const code = getOtpString();\r\n    setOtpHidden();\r\n    updateOtpFill();\r\n    if (code.length === 6 && !otpSubmitting){\r\n      otpSubmitting = true;\r\n      // Small delay to allow UI focus to settle\r\n      ariaAnnounce('Code submitted');\r\n      setTimeout(async ()=>{\r\n        try { await verifyOtp(); } finally { otpSubmitting = false; }\r\n      }, 50);\r\n    }\r\n  }\r\n  function initOtpBoxes(){\r\n    if (!OTP.boxes || !OTP.boxes.length) return;\r\n    OTP.boxes.forEach((box, idx)=>{\r\n      // sanitize non-digit\r\n      const sanitize = ()=>{ box.value = (box.value || '').replace(/\\D/g,'').slice(0,1); };\r\n      box.addEventListener('input', (e)=>{\r\n        sanitize();\r\n        if (box.value){ focusNext(idx); }\r\n        handleOtpAutoSubmit();\r\n        // Announce progress for screen readers\r\n        try { const entered = getOtpString().length; ariaAnnounce(`Digit ${entered} of 6 entered`); } catch(_){ }\r\n      });\r\n      box.addEventListener('keydown', (e)=>{\r\n        if (e.key === 'Backspace'){\r\n          if (!box.value){ focusPrev(idx); }\r\n        } else if (e.key && /^[0-9]$/.test(e.key)){\r\n          // Allow digits\r\n        } else if (e.key.length === 1){\r\n          // Block non-digits\r\n          e.preventDefault();\r\n        }\r\n      });\r\n      box.addEventListener('paste', (e)=>{\r\n        e.preventDefault();\r\n        const text = (e.clipboardData || window.clipboardData).getData('text') || '';\r\n        const digits = text.replace(/\\D/g,'').slice(0,6);\r\n        if (!digits) return;\r\n        // Fill starting from current index\r\n        for (let i=0;i<digits.length && (idx+i)<OTP.boxes.length;i++){\r\n          const target = OTP.boxes[idx+i];\r\n          if (target){ target.value = digits[i]; }\r\n        }\r\n        const lastIdx = Math.min(idx + digits.length, OTP.boxes.length-1);\r\n        const last = OTP.boxes[lastIdx];\r\n        if (last) last.focus();\r\n        handleOtpAutoSubmit();\r\n      });\r\n      // Improve touch targets slightly (already big)\r\n      box.setAttribute('inputmode','numeric');\r\n      box.setAttribute('aria-label', `OTP digit ${idx+1}`);\r\n    });\r\n    // Set hidden input on init\r\n    setOtpHidden();\r\n    updateOtpFill();\r\n  }\r\n\r\n  let countdownTimer = null;\r\n  function showStep(step){\r\n    if (!fpWrap) return;\r\n    [fpStepSend, fpStepOtp, fpStepReset].forEach(s => s && s.classList.add('hidden'));\r\n    if (step === 1 && fpStepSend) fpStepSend.classList.remove('hidden');\r\n    if (step === 2 && fpStepOtp){\r\n      fpStepOtp.classList.remove('hidden');\r\n      // Ensure OTP boxes initialized and focus first box\r\n      try { initOtpBoxes(); } catch(_){ }\r\n      if (OTP.boxes && OTP.boxes[0]) OTP.boxes[0].focus();\r\n    }\r\n    if (step === 3 && fpStepReset) fpStepReset.classList.remove('hidden');\r\n  }\r\n  function toggleLoginInputs(disabled){\r\n    try {\r\n      if (loginPasswordField){\r\n        if (disabled){\r\n          loginPasswordField.dataset._prevDisplay = loginPasswordField.style.display || '';\r\n          loginPasswordField.closest('div')?.classList.add('hidden');\r\n          loginPasswordField.setAttribute('disabled','disabled');\r\n        } else {\r\n          loginPasswordField.closest('div')?.classList.remove('hidden');\r\n          loginPasswordField.removeAttribute('disabled');\r\n        }\r\n      }\r\n      if (loginBtn){\r\n        if (disabled){\r\n          loginBtn.dataset._prevDisabled = '1';\r\n          loginBtn.classList.add('opacity-60','cursor-not-allowed');\r\n          loginBtn.setAttribute('disabled','disabled');\r\n        } else {\r\n          loginBtn.classList.remove('opacity-60','cursor-not-allowed');\r\n          loginBtn.removeAttribute('disabled');\r\n        }\r\n      }\r\n    } catch(_){ }\r\n  }\r\n  function setFpBusy(el, busy, labelBusy='Working\u2026', labelIdle){\r\n    if (!el) return;\r\n    const txt = el.querySelector('[data-text]');\r\n    const sp = el.querySelector('svg');\r\n    el.disabled = !!busy;\r\n    if (busy){\r\n      el.classList.add('opacity-80','cursor-not-allowed');\r\n      if (sp) sp.classList.remove('hidden');\r\n      if (txt) txt.textContent = labelBusy;\r\n    } else {\r\n      el.classList.remove('opacity-80','cursor-not-allowed');\r\n      if (sp) sp.classList.add('hidden');\r\n      if (txt && labelIdle) txt.textContent = labelIdle;\r\n    }\r\n  }\r\n  function setFpMsg(type, text){\r\n    if (!fpMsg) return;\r\n    fpMsg.textContent = text || '';\r\n    fpMsg.classList.add('hidden');\r\n    fpMsg.classList.remove('text-red-600','text-green-600');\r\n    if (text){\r\n      fpMsg.classList.remove('hidden');\r\n      fpMsg.classList.add(type === 'error' ? 'text-red-600' : 'text-green-600');\r\n    }\r\n  }\r\n  function updatePwMatch(){\r\n    if (!fpNewPassword || !fpConfirmPassword) return;\r\n    const iconConfirmOk = document.getElementById('fpPwMatchIcon');\r\n    const iconNewOk = document.getElementById('fpPwNewIconOk');\r\n    const iconNewBad = document.getElementById('fpPwNewIconBad');\r\n    const iconConfirmBad = document.getElementById('fpPwConfirmIconBad');\r\n    const npw = (fpNewPassword.value || '').trim();\r\n    const cpw = (fpConfirmPassword.value || '').trim();\r\n    const npwOk = npw.length >= 8; // basic length rule for visual feedback\r\n    const cpwOk = cpw.length >= 8;\r\n    const match = npwOk && cpwOk && npw === cpw;\r\n    try {\r\n      // Toggle icons\r\n      if (iconConfirmOk) iconConfirmOk.classList.toggle('hidden', !match);\r\n      if (iconNewOk) iconNewOk.classList.toggle('hidden', !(match && npwOk));\r\n      if (iconNewBad) iconNewBad.classList.toggle('hidden', !(cpw.length > 0 && npw.length > 0 && !match));\r\n      if (iconConfirmBad) iconConfirmBad.classList.toggle('hidden', !(cpw.length > 0 && !match));\r\n\r\n      // Border feedback for both fields\r\n      const okCls = ['ring-2','ring-green-500','border-green-500'];\r\n      const badCls = ['ring-2','ring-red-500','border-red-500'];\r\n      fpNewPassword.classList.remove('ring-2','ring-green-500','border-green-500','ring-red-500','border-red-500');\r\n      fpConfirmPassword.classList.remove('ring-2','ring-green-500','border-green-500','ring-red-500','border-red-500');\r\n      if (npw.length > 0){\r\n        if (match) okCls.forEach(c=>fpNewPassword.classList.add(c));\r\n        else if (cpw.length > 0) badCls.forEach(c=>fpNewPassword.classList.add(c));\r\n      }\r\n      if (cpw.length > 0){\r\n        if (match) okCls.forEach(c=>fpConfirmPassword.classList.add(c));\r\n        else badCls.forEach(c=>fpConfirmPassword.classList.add(c));\r\n      }\r\n\r\n      // Enable/disable Reset button strictly when match is true\r\n      const resetBtn = document.getElementById('fpResetBtn');\r\n      if (resetBtn){\r\n        if (match){\r\n          resetBtn.removeAttribute('disabled');\r\n          resetBtn.classList.remove('opacity-60','cursor-not-allowed');\r\n        } else {\r\n          resetBtn.setAttribute('disabled','disabled');\r\n          if (!resetBtn.classList.contains('opacity-60')) resetBtn.classList.add('opacity-60');\r\n          if (!resetBtn.classList.contains('cursor-not-allowed')) resetBtn.classList.add('cursor-not-allowed');\r\n        }\r\n      }\r\n    } catch(_){ }\r\n  }\r\n  function startOtpCountdown(sec){\r\n    if (!fpCountdown && !fpCountdownOtp && !fpProgressOtp && !OTP.countdownText) return;\r\n    if (countdownTimer) clearInterval(countdownTimer);\r\n    let remaining = sec;\r\n    // Step 1 hint (send step)\r\n    if (fpCountdown){\r\n      fpCountdown.textContent = `Expires in ${remaining}s`;\r\n      fpCountdown.classList.remove('hidden');\r\n      fpCountdown.classList.remove('text-red-600','text-yellow-600','text-green-600','animate-pulse');\r\n      fpCountdown.classList.add('text-green-600');\r\n    }\r\n    // Step 2 elements (OTP entry)\r\n    const cdText = OTP.countdownText || fpCountdownOtp;\r\n    if (cdText){\r\n      cdText.textContent = `Expires in ${remaining}s`;\r\n      cdText.classList?.remove('text-red-600','text-yellow-600','text-green-600','animate-pulse');\r\n      cdText.classList?.add('text-green-600');\r\n    }\r\n    if (fpProgressOtp){\r\n      fpProgressOtp.style.width = '100%';\r\n      fpProgressOtp.classList.remove('bg-red-600','bg-yellow-500','bg-blue-600');\r\n      fpProgressOtp.classList.add('bg-blue-600');\r\n    }\r\n    countdownTimer = setInterval(() => {\r\n      remaining -= 1;\r\n      if (remaining <= 0){\r\n        clearInterval(countdownTimer); countdownTimer = null;\r\n        if (fpCountdown){\r\n          fpCountdown.textContent = 'Code expired. Request a new one.';\r\n          fpCountdown.classList.remove('text-green-600','text-yellow-600');\r\n          fpCountdown.classList.add('text-red-600');\r\n          fpCountdown.classList.remove('animate-pulse');\r\n        }\r\n        if (cdText){\r\n          cdText.textContent = 'Code expired';\r\n          cdText.classList?.remove('text-green-600','text-yellow-600');\r\n          cdText.classList?.add('text-red-600');\r\n          cdText.classList?.remove('animate-pulse');\r\n        }\r\n        if (fpProgressOtp){\r\n          fpProgressOtp.style.width = '0%';\r\n          fpProgressOtp.classList.remove('bg-blue-600','bg-yellow-500');\r\n          fpProgressOtp.classList.add('bg-red-600');\r\n        }\r\n        // Clear persisted expiry once expired\r\n        try { sessionStorage.removeItem('fpOtpExpiry'); } catch(_){ }\r\n        return;\r\n      }\r\n      if (fpCountdown) fpCountdown.textContent = `Expires in ${remaining}s`;\r\n      if (cdText) cdText.textContent = `Expires in ${remaining}s`;\r\n      if (fpProgressOtp){\r\n        const pct = Math.max(0, Math.min(100, Math.round((remaining / sec) * 100)));\r\n        fpProgressOtp.style.width = pct + '%';\r\n      }\r\n      // Color/animation thresholds\r\n      if (remaining <= 30){\r\n        if (fpCountdown){\r\n          fpCountdown.classList.remove('text-green-600','text-yellow-600');\r\n          fpCountdown.classList.add('text-red-600','animate-pulse');\r\n        }\r\n        if (cdText){\r\n          cdText.classList?.remove('text-green-600','text-yellow-600');\r\n          cdText.classList?.add('text-red-600','animate-pulse');\r\n        }\r\n        if (fpProgressOtp){\r\n          fpProgressOtp.classList.remove('bg-blue-600','bg-yellow-500');\r\n          fpProgressOtp.classList.add('bg-red-600');\r\n        }\r\n      } else if (remaining <= 120){\r\n        if (fpCountdown){\r\n          fpCountdown.classList.remove('text-green-600');\r\n          fpCountdown.classList.add('text-yellow-600');\r\n          fpCountdown.classList.remove('animate-pulse');\r\n        }\r\n        if (cdText){\r\n          cdText.classList?.remove('text-green-600');\r\n          cdText.classList?.add('text-yellow-600');\r\n          cdText.classList?.remove('animate-pulse');\r\n        }\r\n        if (fpProgressOtp){\r\n          fpProgressOtp.classList.remove('bg-blue-600');\r\n          fpProgressOtp.classList.add('bg-yellow-500');\r\n        }\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  async function requestOtp(){\r\n    if (fpMsg) setFpMsg('info','');\r\n    setFpBusy(fpSendBtn, true, 'Sending\u2026', 'Send OTP');\r\n    try {\r\n      const res = await fetchWithCSRF('/Super-Admin/auth/password-reset/request/', { method: 'POST' });\r\n      const data = await res.json();\r\n      showNotification('If an account exists, an OTP has been sent.', 'info');\r\n      showStep(2);\r\n      // Persist expiry so countdown survives a refresh\r\n      try { sessionStorage.setItem('fpOtpExpiry', String(Date.now() + 600*1000)); } catch(_){ }\r\n      startOtpCountdown(600);\r\n      try { updatePwMatch(); } catch(_){ }\r\n      // Kickoff resend 30s cooldown\r\n      startResendCooldown(30);\r\n    } catch {\r\n      setFpMsg('error','Network error. Try again.');\r\n    } finally {\r\n      setFpBusy(fpSendBtn, false, 'Sending\u2026', 'Send OTP');\r\n    }\r\n  }\r\n\r\n  async function verifyOtp(){\r\n    setFpMsg('info','');\r\n    const code = (fpOtpInput && fpOtpInput.value || getOtpString() || '').trim();\r\n    if (!/^\\d{6}$/.test(code)){\r\n      setFpMsg('error','Please enter a valid 6-digit code.');\r\n      otpErrorFeedback();\r\n      return;\r\n    }\r\n    setFpBusy(fpVerifyBtn, true, 'Verifying\u2026', 'Verify Code');\r\n    try {\r\n      const fd = new FormData();\r\n      fd.append('code', code);\r\n      const res = await fetchWithCSRF('/Super-Admin/auth/password-reset/verify-otp/', { method: 'POST', body: fd });\r\n      const data = await res.json();\r\n      if (data && data.ok && data.verified){\r\n        showNotification('OTP verified. You can set a new password now.', 'success');\r\n        showStep(3);\r\n        try { sessionStorage.removeItem('fpOtpExpiry'); } catch(_){ }\r\n        // Initialize match state/icons/button on entering reset step\r\n        try { updatePwMatch(); } catch(_){ }\r\n      } else {\r\n        setFpMsg('error','Incorrect or expired code. Try again.');\r\n        otpErrorFeedback();\r\n        ariaAnnounce('Code incorrect or expired');\r\n      }\r\n    } catch {\r\n      setFpMsg('error','Network error. Try again.');\r\n    } finally {\r\n      setFpBusy(fpVerifyBtn, false, 'Verifying\u2026', 'Verify Code');\r\n    }\r\n  }\r\n\r\n  async function confirmReset(){\r\n    setFpMsg('info','');\r\n    const npw = (fpNewPassword && fpNewPassword.value) || '';\r\n    const cpw = (fpConfirmPassword && fpConfirmPassword.value) || '';\r\n    if (!npw || npw.length < 8){ setFpMsg('error','Password must be at least 8 characters.'); return; }\r\n    if (cpw !== npw){ setFpMsg('error','Passwords do not match.'); return; }\r\n    setFpBusy(fpResetBtn, true, 'Updating\u2026', 'Reset Password');\r\n    try {\r\n      const fd = new FormData();\r\n      fd.append('new_password', npw);\r\n      const res = await fetchWithCSRF('/Super-Admin/auth/password-reset/confirm/', { method: 'POST', body: fd });\r\n      const data = await res.json();\r\n      if (data && data.ok && data.reset){\r\n        // Show inline success for 4 seconds before returning to login\r\n        setFpMsg('success','\u2714 Password reset successful. You can now sign in.');\r\n        // Also show global toast\r\n        showNotification('Password reset successful. Please sign in.', 'success');\r\n        // Hold the panel visible briefly for confirmation\r\n        setTimeout(() => {\r\n          showStep(1);\r\n          if (fpWrap) fpWrap.classList.add('hidden');\r\n          // Re-enable login inputs so user can sign in with new password\r\n          toggleLoginInputs(false);\r\n          // Clear fields\r\n          try { fpNewPassword.value = ''; fpConfirmPassword.value = ''; updatePwMatch(); } catch(_){ }\r\n        }, 4000);\r\n      } else {\r\n        setFpMsg('error', (data && data.error) || 'Unable to reset password.');\r\n      }\r\n    } catch {\r\n      setFpMsg('error','Network error. Try again.');\r\n    } finally {\r\n      setFpBusy(fpResetBtn, false, 'Updating\u2026', 'Reset Password');\r\n    }\r\n  }\r\n\r\n  if (fpToggle && fpWrap){\r\n    fpToggle.addEventListener('click', (e)=>{\r\n      e.preventDefault();\r\n      fpWrap.classList.toggle('hidden');\r\n      showStep(1);\r\n      setFpMsg('info','');\r\n      // When panel is opened, hide/disable login password field and button to guide user\r\n      const isOpen = !fpWrap.classList.contains('hidden');\r\n      toggleLoginInputs(isOpen);\r\n      if (isOpen){ try { updatePwMatch(); } catch(_){ } }\r\n    });\r\n  }\r\n  if (fpSendBtn) fpSendBtn.addEventListener('click', (e)=>{ e.preventDefault(); requestOtp(); });\r\n  if (fpVerifyBtn) fpVerifyBtn.addEventListener('click', (e)=>{ e.preventDefault(); verifyOtp(); });\r\n  if (fpResetBtn) fpResetBtn.addEventListener('click', (e)=>{ e.preventDefault(); confirmReset(); });\r\n  const _bindPwEvents = (el) => {\r\n    if (!el) return;\r\n    el.addEventListener('input', updatePwMatch);\r\n    el.addEventListener('keyup', updatePwMatch);\r\n    el.addEventListener('change', updatePwMatch);\r\n    el.addEventListener('paste', ()=> setTimeout(updatePwMatch, 0));\r\n  };\r\n  _bindPwEvents(fpNewPassword);\r\n  _bindPwEvents(fpConfirmPassword);\r\n\r\n  // Clear all OTP boxes\r\n  if (OTP.clearBtn) OTP.clearBtn.addEventListener('click', (e)=>{ e.preventDefault(); clearOtp(); });\r\n\r\n  // Resend cooldown and click handler\r\n  function setResendState(enabled, seconds){\r\n    if (!fpResendBtn || !fpResendLabel) return;\r\n    if (enabled){\r\n      fpResendBtn.removeAttribute('disabled');\r\n      fpResendBtn.classList.remove('cursor-not-allowed','opacity-60');\r\n      fpResendLabel.textContent = 'Resend OTP';\r\n    } else {\r\n      fpResendBtn.setAttribute('disabled','disabled');\r\n      if (!fpResendBtn.classList.contains('cursor-not-allowed')) fpResendBtn.classList.add('cursor-not-allowed');\r\n      if (!fpResendBtn.classList.contains('opacity-60')) fpResendBtn.classList.add('opacity-60');\r\n      fpResendLabel.textContent = `Resend in ${seconds}s`;\r\n    }\r\n  }\r\n  function startResendCooldown(seconds){\r\n    if (!fpResendBtn) return;\r\n    let remain = seconds;\r\n    if (resendCooldownTimer) clearInterval(resendCooldownTimer);\r\n    setResendState(false, remain);\r\n    resendCooldownTimer = setInterval(()=>{\r\n      remain -= 1;\r\n      if (remain <= 0){\r\n        clearInterval(resendCooldownTimer); resendCooldownTimer = null;\r\n        setResendState(true, 0);\r\n      } else {\r\n        setResendState(false, remain);\r\n      }\r\n    }, 1000);\r\n  }\r\n  if (fpResendBtn) fpResendBtn.addEventListener('click', async (e)=>{\r\n    e.preventDefault();\r\n    if (fpResendBtn.hasAttribute('disabled')) return;\r\n    await requestOtp();\r\n  });\r\n\r\n  // Auto-run countdown on login.html if an unexpired OTP exists\r\n  try {\r\n    const raw = sessionStorage.getItem('fpOtpExpiry');\r\n    const expiry = raw ? parseInt(raw, 10) : 0;\r\n    const now = Date.now();\r\n    if (expiry && expiry > now){\r\n      const remainingMs = expiry - now;\r\n      const remainingSec = Math.max(1, Math.floor(remainingMs / 1000));\r\n      if (fpWrap){ fpWrap.classList.remove('hidden'); }\r\n      showStep(2);\r\n      initOtpBoxes();\r\n      toggleLoginInputs(true);\r\n      startOtpCountdown(remainingSec);\r\n      // On page reload resume, ensure resend shows a short cooldown to prevent spam\r\n      startResendCooldown(15);\r\n    }\r\n  } catch(_){ }\r\n});\r\n"],
  "mappings": "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",
  "names": ["loginUser", "formData", "signupUser", "logoutUser", "form", "setBusy", "state", "btn", "btnSpinner", "btnText", "loader", "errBox", "e", "data", "username", "password", "res", "loadingEl", "cardWrapper", "host", "card", "msg", "fpToggle", "fpWrap", "fpStepSend", "fpStepOtp", "fpStepReset", "fpSendBtn", "fpOtpInput", "fpVerifyBtn", "fpNewPassword", "fpConfirmPassword", "fpResetBtn", "fpMsg", "fpCountdown", "fpCountdownOtp", "fpProgressOtp", "fpOtpFill", "fpOtpLive", "loginPasswordField", "loginBtn", "fpOtpGroup", "fpOtpBoxes", "i", "otpGroupCompat", "otpBoxesCompat", "fpOtpClear", "fpResendBtn", "fpResendLabel", "countdownCompat", "progressBarCompat", "progressTextCompat", "OTP", "otpSubmitting", "resendCooldownTimer", "ariaAnnounce", "getOtpString", "b", "setOtpHidden", "updateOtpFill", "len", "pct", "clearOtp", "otpErrorFeedback", "focusNext", "index", "next", "focusPrev", "prev", "handleOtpAutoSubmit", "code", "verifyOtp", "initOtpBoxes", "box", "idx", "sanitize", "entered", "digits", "target", "lastIdx", "last", "countdownTimer", "showStep", "step", "s", "toggleLoginInputs", "disabled", "setFpBusy", "el", "busy", "labelBusy", "labelIdle", "txt", "sp", "setFpMsg", "type", "text", "updatePwMatch", "iconConfirmOk", "iconNewOk", "iconNewBad", "iconConfirmBad", "npw", "cpw", "npwOk", "cpwOk", "match", "okCls", "badCls", "c", "resetBtn", "startOtpCountdown", "sec", "remaining", "cdText", "requestOtp", "startResendCooldown", "fd", "confirmReset", "isOpen", "_bindPwEvents", "setResendState", "enabled", "seconds", "remain", "raw", "expiry", "now", "remainingMs", "remainingSec"]
}
