# Generated by Cascade - manual migration to extend Table6 and add certificates with UUID backfill
from django.db import migrations, models
from django.conf import settings
import uuid


def backfill_artist_application_uuid(apps, schema_editor):
    Table6 = apps.get_model('dashboard', 'Table6')
    for row in Table6.objects.filter(artist_application_id__isnull=True):
        row.artist_application_id = uuid.uuid4()
        row.save(update_fields=['artist_application_id'])


class Migration(migrations.Migration):

    dependencies = [
        ('dashboard', '0003_table1_is_active_table1_password_hash_table1_role_and_more'),
    ]

    operations = [
        # Add new fields to Table6 (dashboard_artist_application)
        # Step 1: add column nullable, without default/unique to avoid SQLite applying a single static default
        migrations.AddField(
            model_name='table6',
            name='artist_application_id',
            field=models.UUIDField(null=True, blank=True, editable=False),
        ),
        migrations.AddField(
            model_name='table6',
            name='approved',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='table6',
            name='approved_at',
            field=models.DateTimeField(null=True, blank=True),
        ),
        migrations.AddField(
            model_name='table6',
            name='approval_admin',
            field=models.ForeignKey(null=True, blank=True, on_delete=models.SET_NULL, related_name='approved_artist_applications', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='table6',
            name='application_status',
            field=models.CharField(
                max_length=32,
                choices=[
                    ('processing', 'Processing'),
                    ('under_review', 'Under Review'),
                    ('approved', 'Approved'),
                    ('rejected', 'Rejected'),
                    ('pending', 'Pending'),
                ],
                default='pending',
                db_index=True,
            ),
        ),
        migrations.AddField(
            model_name='table6',
            name='user',
            field=models.ForeignKey(null=True, blank=True, on_delete=models.SET_NULL, related_name='artist_applications', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='table6',
            name='email',
            field=models.EmailField(max_length=254, null=True, blank=True),
        ),
        migrations.AddField(
            model_name='table6',
            name='years_experience',
            field=models.PositiveIntegerField(default=0),
        ),

        # Create certificates table
        migrations.CreateModel(
            name='ArtistApplicationCertificate',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('file', models.FileField(upload_to='artist_certificates/%Y/%m/%d/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('application', models.ForeignKey(on_delete=models.CASCADE, related_name='certificates', to='dashboard.table6')),
            ],
            options={
                'db_table': 'dashboard_artist_application_certificate',
            },
        ),

        # Step 2: backfill UUIDs for existing rows
        migrations.RunPython(backfill_artist_application_uuid, reverse_code=migrations.RunPython.noop),
        # Step 3: enforce uniqueness after backfill
        migrations.AlterField(
            model_name='table6',
            name='artist_application_id',
            field=models.UUIDField(null=True, blank=True, editable=False, unique=True),
        ),
    ]
