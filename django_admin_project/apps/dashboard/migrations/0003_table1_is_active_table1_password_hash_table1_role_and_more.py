# Generated by Django 4.2.7 on 2025-09-04 19:32

from django.conf import settings
from django.db import migrations, models
import re
import django.db.models.deletion


def _build_base_username(name: str, phone: str) -> str:
    letters = "".join(re.findall(r"[A-Za-z]", name or ""))[:4].lower() or "user"
    digits = "".join(re.findall(r"\d", phone or ""))
    last3 = (digits[-3:] if len(digits) >= 3 else digits.rjust(3, "0"))
    return f"{letters}{last3}@flodo.com"


def _populate_user_names(apps, schema_editor):
    Table1 = apps.get_model("dashboard", "Table1")
    used = set(
        x for x in Table1.objects.exclude(user_name="").values_list("user_name", flat=True)
    )
    for obj in Table1.objects.all().only("pk", "name", "phone", "user_name"):
        if obj.user_name:
            continue
        base = _build_base_username(obj.name, obj.phone)
        candidate = base
        suffix = 1
        while candidate in used:
            candidate = f"{base}-{suffix}"
            suffix += 1
        obj.user_name = candidate
        obj.save(update_fields=["user_name"])
        used.add(candidate)


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("dashboard", "0002_remove_table1_dashboard_t_name_dd2bca_idx_and_more"),
    ]

    operations = [
        migrations.AddField(
            model_name="table1",
            name="is_active",
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name="table1",
            name="password_hash",
            field=models.CharField(blank=True, max_length=128),
        ),
        migrations.AddField(
            model_name="table1",
            name="role",
            field=models.CharField(
                choices=[("user", "User"), ("admin", "Admin"), ("super", "Super")],
                default="user",
                max_length=20,
            ),
        ),
        migrations.AddField(
            model_name="table1",
            name="role_approvedby",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        # Step 1: add field without unique to allow backfilling existing rows safely
        migrations.AddField(
            model_name="table1",
            name="user_name",
            field=models.CharField(
                blank=True, db_index=True, max_length=150
            ),
        ),
        # Step 2: backfill unique usernames
        migrations.RunPython(_populate_user_names, reverse_code=migrations.RunPython.noop),
        # Step 3: enforce uniqueness after data is clean
        migrations.AlterField(
            model_name="table1",
            name="user_name",
            field=models.CharField(
                blank=True, db_index=True, max_length=150, unique=True
            ),
        ),
    ]
